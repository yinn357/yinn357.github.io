import{_ as i,c as s,o as a,a as e}from"./app-BHfHleRX.js";const t="/assets/clash_config_yaml-m34mcgZM.png",l="/assets/clash_dashboard-B7NiXvHu.png",n="/assets/clash_dashboard_2-DPbMWYQg.png",h={},r=e(`<h1 id="docker-版的clash-linux使用" tabindex="-1"><a class="header-anchor" href="#docker-版的clash-linux使用"><span>Docker 版的Clash Linux使用</span></a></h1><h2 id="镜像" tabindex="-1"><a class="header-anchor" href="#镜像"><span>镜像</span></a></h2><p>作者的GitHub仓库删了,但是DockerHub的镜像没删</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dreamacro/clash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> haishanh/yacd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下载config-yaml" tabindex="-1"><a class="header-anchor" href="#下载config-yaml"><span>下载config.yaml</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xxxx</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> ## 要么拉下来 要么自己拷贝上来</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 注意： 名称为：config.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="这里要特别注意-我们的config-yaml里有两个项特别重要的配置。" tabindex="-1"><a class="header-anchor" href="#这里要特别注意-我们的config-yaml里有两个项特别重要的配置。"><span><strong>这里要特别注意，我们的config.yaml里有两个项特别重要的配置。</strong></span></a></h3><figure><img src="`+t+`" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># external-controller :需要设置为0.0.0.0，保证dashboard容器能够访问到</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># allow-lan :必须设置为true,允许局域网访问</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行容器" tabindex="-1"><a class="header-anchor" href="#运行容器"><span>运行容器</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name=clash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PWD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/config.yaml:/root/.config/clash/config.yaml&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;7890:7890&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;9090:9090&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart=unless-stopped</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dreamacro/clash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1234:80</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clash-dashboard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> haishanh/yacd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>确保config.yaml没错并且运行完以上四个命令后，就可以进dashboard了，url就是的主机ip:1234 <img src="`+l+'" alt="在这里插入图片描述" loading="lazy"> 默认的http://127.0.0.1:9090是不可能成功进去的，因为这个127.0.0.1代表的是dashboard的本地，而真正的clash服务是在令一个容器内，所以我们真正的地址应该是主机ip:9090。 <img src="'+n+`" alt="在这里插入图片描述" loading="lazy"></p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>配置命令别名</p><p><code>vim ~/.bashrc</code> 将下面命令写入该文件 (建议为root用户)</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 设置/取消代理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> proxy_on</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;export https_proxy=127.0.0.1:7890 &amp;&amp; export http_proxy=127.0.0.1:7890&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> proxy_off</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;unset http_proxy https_proxy&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 启动/关闭clash 并设置代理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> clash_start</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;docker start clash &amp;&amp; docker start clash-dashboard &amp;&amp; proxy_on&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> clash_stop</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;docker stop clash &amp;&amp; docker stop clash-dashboard &amp;&amp; proxy_off&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>source ~/.bashrc</code> 重新载入</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://www.hengy1.top/article/3dadfa74.html</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://wuuconix.link/2021/08/14/clash-dashboard/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,19),d=[r];function p(k,c){return a(),s("div",null,d)}const g=i(h,[["render",p],["__file","Clash Docker版.html.vue"]]),y=JSON.parse('{"path":"/docs/Clash%20Docker%E7%89%88.html","title":"Docker 版的Clash Linux使用","lang":"zh-CN","frontmatter":{"category":["教程"],"tag":["VPN","技巧"],"description":"Docker 版的Clash Linux使用 镜像 作者的GitHub仓库删了,但是DockerHub的镜像没删 下载config.yaml 这里要特别注意，我们的config.yaml里有两个项特别重要的配置。 在这里插入图片描述在这里插入图片描述 运行容器 确保config.yaml没错并且运行完以上四个命令后，就可以进dashboard了，url...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/docs/Clash%20Docker%E7%89%88.html"}],["meta",{"property":"og:site_name","content":"Yinn"}],["meta",{"property":"og:title","content":"Docker 版的Clash Linux使用"}],["meta",{"property":"og:description","content":"Docker 版的Clash Linux使用 镜像 作者的GitHub仓库删了,但是DockerHub的镜像没删 下载config.yaml 这里要特别注意，我们的config.yaml里有两个项特别重要的配置。 在这里插入图片描述在这里插入图片描述 运行容器 确保config.yaml没错并且运行完以上四个命令后，就可以进dashboard了，url..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-30T09:54:34.000Z"}],["meta",{"property":"article:author","content":"Yinn"}],["meta",{"property":"article:tag","content":"VPN"}],["meta",{"property":"article:tag","content":"技巧"}],["meta",{"property":"article:modified_time","content":"2024-08-30T09:54:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 版的Clash Linux使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-30T09:54:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yinn\\",\\"url\\":\\"https://yinn.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"镜像","slug":"镜像","link":"#镜像","children":[]},{"level":2,"title":"下载config.yaml","slug":"下载config-yaml","link":"#下载config-yaml","children":[{"level":3,"title":"这里要特别注意，我们的config.yaml里有两个项特别重要的配置。","slug":"这里要特别注意-我们的config-yaml里有两个项特别重要的配置。","link":"#这里要特别注意-我们的config-yaml里有两个项特别重要的配置。","children":[]}]},{"level":2,"title":"运行容器","slug":"运行容器","link":"#运行容器","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1725011674000,"updatedTime":1725011674000,"contributors":[{"name":"Yinn","email":"yinn357@qq.com","commits":1}]},"readingTime":{"minutes":1.23,"words":368},"filePathRelative":"docs/Clash Docker版.md","localizedDate":"2024年8月30日","excerpt":"\\n<h2>镜像</h2>\\n<p>作者的GitHub仓库删了,但是DockerHub的镜像没删</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">docker</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> pull</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> dreamacro/clash</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">docker</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> pull</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> haishanh/yacd</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{g as comp,y as data};
